package KieRule;
import com.drools_car_diag.droolsCar.entities.swiatla.migacze.Migacze
import com.drools_car_diag.droolsCar.entities.swiatla.stopu.Stopu;
import com.drools_car_diag.droolsCar.entities.swiatla.cofania.Cofania;
import com.drools_car_diag.droolsCar.entities.rozne.Bezpiecznik;
import com.drools_car_diag.droolsCar.entities.rozne.Przewody;
import com.drools_car_diag.droolsCar.entities.rozne.Zarowki;


//0 - nie ustawione
//1 - false
//2 - true

//migacze
rule "migaczeCzySwieca"
    when
        migacze : Migacze();
        eval(migacze.isCzySwieca() == 1)
    then
        migacze.setWiadomosc("Sprawdź bezpieczniki.");
end

rule "migaczeCzySwiecaOk"
    when
        migacze : Migacze();
        eval(migacze.isCzySwieca() == 2)
    then
        migacze.setWiadomosc("Wyglada na to, ze wszystko jest okej!");
end

rule "migaczeCzySwiecaBezpiecznikiOk"
    when
        migacze : Migacze()
        bezpiecznik : Bezpiecznik()
        eval(migacze.isCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
     then
        migacze.setWiadomosc("Sprawdź zarówkę.");
end

rule "migaczeCzySwiecaBezpiecznikiZly"
    when
        migacze : Migacze()
        bezpiecznik : Bezpiecznik()
        eval(migacze.isCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 2)
     then
        migacze.setWiadomosc("Wymien bezpiecznik - Uszkodzony.");
end

rule "migaczeCzySwiecaBezpieczniki&ZarowkaOk"
    when
        migacze : Migacze()
        bezpiecznik : Bezpiecznik()
        zarowka : Zarowki()
        eval(migacze.isCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
     then
        migacze.setWiadomosc("Sprawdź przewody");
end

rule "migaczeCzySwiecaBezpieczniki&ZarowkaZla"
    when
        migacze : Migacze()
        bezpiecznik : Bezpiecznik()
        zarowka : Zarowki()
        eval(migacze.isCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 2)
     then
        migacze.setWiadomosc("Wymień żarówkę - Uszkodzona.");
end

rule "migaczeCzySwiecaBezpieczniki&Zarowka&PrzewodyOk"
    when
        migacze : Migacze()
        bezpiecznik : Bezpiecznik()
        przewody : Przewody()
        zarowka : Zarowki()
        eval(migacze.isCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(przewody.isCzyUszkodzone() == 1)
        eval(zarowka.isCzySpalone() == 1)
     then
        migacze.setWiadomosc("Uszkodzony alternator / Wyczerpany akumulator.");
end

rule "migaczeCzySwiecaBezpieczniki&Zarowka&PrzewodyZla"
    when
        migacze : Migacze()
        bezpiecznik : Bezpiecznik()
        przewody : Przewody()
        zarowka : Zarowki()
        eval(migacze.isCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(przewody.isCzyUszkodzone() == 2)
        eval(zarowka.isCzySpalone() == 1)
     then
        migacze.setWiadomosc("Wymień przewód - Uszkodzony.");
end

rule "migaczeCzyMigajaZaSzybko"
    when
        migacze: Migacze()
        eval(migacze.isCzySwieca() == 2 && migacze.isCzyZaSzybkoMigaja() == 2)
    then
        migacze.setWiadomosc("Sprawdź czy jedna z żarówek migaczy nie jest przepalona.");
end

rule "migaczeCzyMigajaZaSzybkoZarowkaOk"
    when
        migacze: Migacze()
        zarowka: Zarowki()
        eval(migacze.isCzySwieca() == 2 && migacze.isCzyZaSzybkoMigaja() == 2 && zarowka.isCzySpalone() == 1 && zarowka.isNapiecie() == 0 )
    then
        migacze.setWiadomosc("Sprawdź napięcię żarówek!");
end

rule "migaczeCzyMigajaZaSzybkoZarowkaZla"
    when
        migacze: Migacze()
        zarowka: Zarowki()
        eval(migacze.isCzySwieca() == 2 && migacze.isCzyZaSzybkoMigaja() == 2 && zarowka.isCzySpalone() == 2 )
    then
        migacze.setWiadomosc("Wymień żarówkę - Uszkodzona.");
end

rule "migaczeCzyMigajaZaSzybkoZarowkaNapiecieZle"
    when
        migacze: Migacze()
        zarowka: Zarowki()
        eval(migacze.isCzySwieca() == 2 && migacze.isCzyZaSzybkoMigaja() == 2 && zarowka.isCzySpalone() == 1 && zarowka.isNapiecie() == 1 )
    then
        migacze.setWiadomosc("Wmień Zarówkę - Z poprawnym napięciem.");
end


rule "migaczeCzyMigajaZaSzybkoZarowka&NapiecieOdpowiednie"
    when
        migacze: Migacze()
        zarowka: Zarowki()
        eval(migacze.isCzySwieca() == 2)
        eval(migacze.isCzyZaSzybkoMigaja() == 2)
        eval(zarowka.isCzySpalone() == 1)
        eval(zarowka.isNapiecie() == 2)
    then
        migacze.setWiadomosc("Wymień przerywacz - Uszkodzony.");
end

rule "migaczeDzialaja"
    when
        migacze: Migacze()
        eval(migacze.isCzySwieca() == 2 && migacze.isCzySwieca() == 1 && migacze.isCzyDzialaPrawaStrona() == 2 && migacze.isCzyDzialaLewaStrona() == 2)
     then
        migacze.setWiadomosc("Wygląda na to, że migacze działają prawidłowo!");
end
//migacze stop

//stopu start
rule "stopCzySwieci"
    when
        stopu: Stopu()
        eval(stopu.getCzySwiecaStop() == 1 && stopu.getCzyDzialaCzujnikHamowania() == 0)
    then
        stopu.setWiadomosc("Sprawdz bezpieczniki.");
end

rule "stopCzySwieciOk"
when
        stopu: Stopu()
        eval(stopu.getCzySwiecaStop() == 2)
        eval(stopu.getCzyDzialaCzujnikHamowania() == 0)
then
        stopu.setWiadomosc("Wyglada na to, ze dzialaja poprawnie.");
end


rule "stopCzySwieciBezpiecznikOk"
    when
        stopu: Stopu()
        bezpiecznik : Bezpiecznik()
        eval(stopu.getCzySwiecaStop() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
    then
        stopu.setWiadomosc("Sprawdz zarówkę.");
end

rule "stopCzySwieciBezpiecznikZly"
    when
        stopu: Stopu()
        bezpiecznik : Bezpiecznik()
        eval(stopu.getCzySwiecaStop() == 1)
        eval(bezpiecznik.isCzySpalony() == 2)
    then
        stopu.setWiadomosc("Wymień bezpiecznik.");
end

rule "stopCzySwieciBezpiecznik&ZarowkaOk"
    when
        stopu: Stopu()
        bezpiecznik : Bezpiecznik()
        zarowka : Zarowki()
        eval(stopu.getCzySwiecaStop() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
    then
        stopu.setWiadomosc("Sprawdz przewody.");
end


rule "stopCzySwieciBezpiecznikOk&ZarowkaZla"
    when
        stop: Stopu()
        bezpiecznik : Bezpiecznik()
        zarowka : Zarowki()
        eval(stop.getCzySwiecaStop() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 2)
    then
        stop.setWiadomosc("Wymień żarówkę.");
end

rule "stopCzySwieciBezpiecznik&Zarowka&PrzewodOk"
    when
        stop: Stopu()
        bezpiecznik : Bezpiecznik()
        zarowka : Zarowki()
        przewod : Przewody()
        eval(stop.getCzySwiecaStop() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
    then
        stop.setWiadomosc("Sprawdź czujnik hamowania.");
end

rule "stopCzySwieciBezpiecznik&Zarowka&PrzewodZly"
    when
        stop: Stopu()
        bezpiecznik : Bezpiecznik()
        zarowka : Zarowki()
        przewod : Przewody()
        eval(stop.getCzySwiecaStop() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
        eval(przewod.isCzyUszkodzone() == 2)
    then
        stop.setWiadomosc("Wymień przewód.");
end

rule "stopCzySwieciBezpiecznik&Zarowka&Przewod&CzujnikOk"
    when
        stop: Stopu()
        bezpiecznik : Bezpiecznik()
        zarowka : Zarowki()
        przewod : Przewody()
        eval(stop.getCzySwiecaStop()==1 && stop.getCzyDzialaCzujnikHamowania() == 2)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
        eval(przewod.isCzyUszkodzone() == 1)
    then
        stop.setWiadomosc("Sprawdź czy dochodzi napięcie - jeżeli tak, uszkodzony czujnik hamowania.");
end

rule "stopCzySwieciBezpiecznik&Zarowka&Przewod&CzujnikZly"
    when
        stop: Stopu()
        bezpiecznik : Bezpiecznik()
        zarowka : Zarowki()
        przewod : Przewody()
        eval(stop.getCzySwiecaStop()==1 && stop.getCzyDzialaCzujnikHamowania() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
        eval(przewod.isCzyUszkodzone() == 1)

    then
        stop.setWiadomosc("Wymień czujnik hamowania.");
end
//stopu Stop - 24

//cofania start
rule "cofaniaCzySwieciNie"
    when
        cofania : Cofania()
        eval(cofania.getCzySwieca() == 1)
     then
        cofania.setWiadomosc("Sprawdź bezpieczniki.");
end

rule "cofaniaCzySwieciTak"
    when
        cofania : Cofania()
        eval(cofania.getCzySwieca() == 2)
     then
        cofania.setWiadomosc("Dzialają poprawnie / Uszkodzony czujnik, jeżeli świecą ciągle.");
end

rule "cofaniaCzySwieciNieBezpiecznikOk"
    when
        cofania : Cofania()
        bezpiecznik : Bezpiecznik()
        eval(cofania.getCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
     then
        cofania.setWiadomosc("Sprawdź żarówki.");
end

rule "cofaniaCzySwieciNieBezpiecznikZly"
    when
        cofania : Cofania()
        bezpiecznik : Bezpiecznik()
        eval(cofania.getCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 2)
     then
        cofania.setWiadomosc("Wymień bezpiecznik - Uszkodzony.");
end

rule "cofaniaCzySwieciNieBezpiecznik&ZarowkaOk"
    when
        cofania : Cofania()
        bezpiecznik : Bezpiecznik()
        zarowka: Zarowki()
        eval(cofania.getCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
     then
        cofania.setWiadomosc("Sprawdź przewody.");
end

rule "cofaniaCzySwieciNieBezpiecznik&ZarowkaZla"
    when
        cofania : Cofania()
        bezpiecznik : Bezpiecznik()
        zarowka: Zarowki()
        eval(cofania.getCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 2)
     then
        cofania.setWiadomosc("Wymień żarówkę - Uszkodzona.");
end

rule "cofaniaCzySwieciNieBezpiecznik&Zarowka&PrzewodOk"
    when
        cofania : Cofania()
        bezpiecznik : Bezpiecznik()
        zarowka: Zarowki()
        przewod: Przewody()
        eval(cofania.getCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
        eval(przewod.isCzyUszkodzone() == 1)
     then
        cofania.setWiadomosc("Wymień czujnik biegu wstecznego - Uszkodzony.");
end

rule "cofaniaCzySwieciNieBezpiecznik&Zarowka&PrzewodZly"
    when
        cofania : Cofania()
        bezpiecznik : Bezpiecznik()
        zarowka: Zarowki()
        przewod: Przewody()
        eval(cofania.getCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
        eval(przewod.isCzyUszkodzone() == 2)
     then
        cofania.setWiadomosc("Wymień przewód - Uszkodzony.");
end

rule "cofaniaCzySwieciNieBezpiecznik&Zarowka&Przewod&CzujnikOk"
    when
        cofania : Cofania()
        bezpiecznik : Bezpiecznik()
        zarowka: Zarowki()
        przewod: Przewody()
        eval(cofania.getCzySwieca() == 1 && cofania.getCzyCzujnikBieguDziala() == 2)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
        eval(przewod.isCzyUszkodzone() == 1)
     then
        cofania.setWiadomosc("Coś poszło nie tak - skonsultuj się z mechanikiem.");
end

//swiatla cofania Stop
//33

//swiatla oswietlajace start
