package KieRule;
import com.drools_car_diag.droolsCar.entities.swiatla.migacze.Migacze
import com.drools_car_diag.droolsCar.entities.swiatla.stopu.Stopu;
import com.drools_car_diag.droolsCar.entities.swiatla.cofania.Cofania;
import com.drools_car_diag.droolsCar.entities.rozne.Bezpiecznik;
import com.drools_car_diag.droolsCar.entities.rozne.Przewody;
import com.drools_car_diag.droolsCar.entities.rozne.Zarowki;
import com.drools_car_diag.droolsCar.entities.hamulce.KlockiHamulcowe;
import com.drools_car_diag.droolsCar.entities.hamulce.PompaHamulcowa;
import com.drools_car_diag.droolsCar.entities.hamulce.TarczeHamulcowe;
import com.drools_car_diag.droolsCar.entities.hamulce.TloczkiHamulcowe;
import com.drools_car_diag.droolsCar.entities.opony.Opony;
import com.drools_car_diag.droolsCar.entities.skrzyniaBiegow.Automatyczna;
import com.drools_car_diag.droolsCar.entities.skrzyniaBiegow.Manualna;
import com.drools_car_diag.droolsCar.entities.ukladKierowniczy.UkladKierowniczy
import com.drools_car_diag.droolsCar.entities.wydech.Katalizator;
import com.drools_car_diag.droolsCar.entities.wydech.Kolektor;
import com.drools_car_diag.droolsCar.entities.wydech.SondaLambda;
import com.drools_car_diag.droolsCar.entities.wydech.Wydech;
import com.drools_car_diag.droolsCar.entities.zawieszenie.Amortyzatory;
import com.drools_car_diag.droolsCar.entities.zawieszenie.GeometriaZawieszenia;
import com.drools_car_diag.droolsCar.entities.zawieszenie.Stabilizatory;
import com.drools_car_diag.droolsCar.entities.zawieszenie.Wahacze;
import com.drools_car_diag.droolsCar.entities.silnik.Cewka;
import com.drools_car_diag.droolsCar.entities.silnik.Przepustnica;
import com.drools_car_diag.droolsCar.entities.silnik.Turbosprezarka;
import com.drools_car_diag.droolsCar.entities.silnik.czujniki.CzujnikMasyPowietrza;
import com.drools_car_diag.droolsCar.entities.silnik.czujniki.CzujnikPolozeniaWaluKorbowego;
import com.drools_car_diag.droolsCar.entities.swiatla.oswietlajace.Oswietlajace;
import com.drools_car_diag.droolsCar.entities.swiatla.oswietlajace.OswietlajaceSprawdz;
//migacze
rule "migaczeCzySwieca"
    when
        migacze : Migacze();
        eval(migacze.isCzySwieca() == 1)
    then
        migacze.setWiadomosc("Sprawdź bezpieczniki.");
end

rule "migaczeCzySwiecaOk"
    when
        migacze : Migacze();
        eval(migacze.isCzySwieca() == 2)
    then
        migacze.setWiadomosc("Wyglada na to, ze wszystko jest okej!");
end

rule "migaczeCzySwiecaBezpiecznikiOk"
    when
        migacze : Migacze()
        bezpiecznik : Bezpiecznik()
        eval(migacze.isCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
     then
        migacze.setWiadomosc("Sprawdź zarówkę.");
end

rule "migaczeCzySwiecaBezpiecznikiZly"
    when
        migacze : Migacze()
        bezpiecznik : Bezpiecznik()
        eval(migacze.isCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 2)
     then
        migacze.setWiadomosc("Wymien bezpiecznik - Uszkodzony.");
end

rule "migaczeCzySwiecaBezpieczniki&ZarowkaOk"
    when
        migacze : Migacze()
        bezpiecznik : Bezpiecznik()
        zarowka : Zarowki()
        eval(migacze.isCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
     then
        migacze.setWiadomosc("Sprawdź przewody");
end

rule "migaczeCzySwiecaBezpieczniki&ZarowkaZla"
    when
        migacze : Migacze()
        bezpiecznik : Bezpiecznik()
        zarowka : Zarowki()
        eval(migacze.isCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 2)
     then
        migacze.setWiadomosc("Wymień żarówkę - Uszkodzona.");
end

rule "migaczeCzySwiecaBezpieczniki&Zarowka&PrzewodyOk"
    when
        migacze : Migacze()
        bezpiecznik : Bezpiecznik()
        przewody : Przewody()
        zarowka : Zarowki()
        eval(migacze.isCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(przewody.isCzyUszkodzone() == 1)
        eval(zarowka.isCzySpalone() == 1)
     then
        migacze.setWiadomosc("Uszkodzony alternator / Wyczerpany akumulator.");
end

rule "migaczeCzySwiecaBezpieczniki&Zarowka&PrzewodyZla"
    when
        migacze : Migacze()
        bezpiecznik : Bezpiecznik()
        przewody : Przewody()
        zarowka : Zarowki()
        eval(migacze.isCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(przewody.isCzyUszkodzone() == 2)
        eval(zarowka.isCzySpalone() == 1)
     then
        migacze.setWiadomosc("Wymień przewód - Uszkodzony.");
end

rule "migaczeCzyMigajaZaSzybko"
    when
        migacze: Migacze()
        eval(migacze.isCzySwieca() == 2 && migacze.isCzyZaSzybkoMigaja() == 2)
    then
        migacze.setWiadomosc("Sprawdź czy jedna z żarówek migaczy nie jest przepalona.");
end

rule "migaczeCzyMigajaZaSzybkoZarowkaOk"
    when
        migacze: Migacze()
        zarowka: Zarowki()
        eval(migacze.isCzySwieca() == 2 && migacze.isCzyZaSzybkoMigaja() == 2 && zarowka.isCzySpalone() == 1 && zarowka.isNapiecie() == 0 )
    then
        migacze.setWiadomosc("Sprawdź napięcię żarówek!");
end

rule "migaczeCzyMigajaZaSzybkoZarowkaZla"
    when
        migacze: Migacze()
        zarowka: Zarowki()
        eval(migacze.isCzySwieca() == 2 && migacze.isCzyZaSzybkoMigaja() == 2 && zarowka.isCzySpalone() == 2 )
    then
        migacze.setWiadomosc("Wymień żarówkę - Uszkodzona.");
end

rule "migaczeCzyMigajaZaSzybkoZarowkaNapiecieZle"
    when
        migacze: Migacze()
        zarowka: Zarowki()
        eval(migacze.isCzySwieca() == 2 && migacze.isCzyZaSzybkoMigaja() == 2 && zarowka.isCzySpalone() == 1 && zarowka.isNapiecie() == 1 )
    then
        migacze.setWiadomosc("Wmień Zarówkę - Z poprawnym napięciem.");
end


rule "migaczeCzyMigajaZaSzybkoZarowka&NapiecieOk"
    when
        migacze: Migacze()
        zarowka: Zarowki()
        eval(migacze.isCzyZaSzybkoMigaja() == 2 &&  migacze.isCzySwieca() == 2 && zarowka.isCzySpalone() == 1 && zarowka.isNapiecie() == 2)
    then
        migacze.setWiadomosc("Wymień przerywacz - Uszkodzony.");
end

rule "migaczeDzialaja"
    when
        migacze: Migacze()
        eval(migacze.isCzySwieca() == 2 && migacze.isCzySwieca() == 1 && migacze.isCzyDzialaPrawaStrona() == 2 && migacze.isCzyDzialaLewaStrona() == 2)
     then
        migacze.setWiadomosc("Wygląda na to, że migacze działają prawidłowo!");
end
//migacze stop

//stopu start
rule "stopCzySwieci"
    when
        stopu: Stopu()
        eval(stopu.getCzySwiecaStop() == 1 && stopu.getCzyDzialaCzujnikHamowania() == 0)
    then
        stopu.setWiadomosc("Sprawdz bezpieczniki.");
end

rule "stopCzySwieciOk"
when
        stopu: Stopu()
        eval(stopu.getCzySwiecaStop() == 2)
        eval(stopu.getCzyDzialaCzujnikHamowania() == 0)
then
        stopu.setWiadomosc("Wyglada na to, ze dzialaja poprawnie.");
end


rule "stopCzySwieciBezpiecznikOk"
    when
        stopu: Stopu()
        bezpiecznik : Bezpiecznik()
        eval(stopu.getCzySwiecaStop() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
    then
        stopu.setWiadomosc("Sprawdz zarówkę.");
end

rule "stopCzySwieciBezpiecznikZly"
    when
        stopu: Stopu()
        bezpiecznik : Bezpiecznik()
        eval(stopu.getCzySwiecaStop() == 1)
        eval(bezpiecznik.isCzySpalony() == 2)
    then
        System.out.println(stopu.getCzySwiecaStop() + " " + bezpiecznik.isCzySpalony());
        stopu.setWiadomosc("Wymień bezpiecznik.");
end

rule "stopCzySwieciBezpiecznik&ZarowkaOk"
    when
        stopu: Stopu()
        bezpiecznik : Bezpiecznik()
        zarowka : Zarowki()
        eval(stopu.getCzySwiecaStop() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
    then
        stopu.setWiadomosc("Sprawdz przewody.");
end


rule "stopCzySwieciBezpiecznikOk&ZarowkaZla"
    when
        stop: Stopu()
        bezpiecznik : Bezpiecznik()
        zarowka : Zarowki()
        eval(stop.getCzySwiecaStop() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 2)
    then
        stop.setWiadomosc("Wymień żarówkę.");
end

rule "stopCzySwieciBezpiecznik&Zarowka&PrzewodOk"
    when
        stop: Stopu()
        bezpiecznik : Bezpiecznik()
        zarowka : Zarowki()
        przewod : Przewody()
        eval(stop.getCzySwiecaStop() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
    then
        stop.setWiadomosc("Sprawdź czujnik hamowania.");
end

rule "stopCzySwieciBezpiecznik&Zarowka&PrzewodZly"
    when
        stop: Stopu()
        bezpiecznik : Bezpiecznik()
        zarowka : Zarowki()
        przewod : Przewody()
        eval(stop.getCzySwiecaStop() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
        eval(przewod.isCzyUszkodzone() == 2)
    then
        stop.setWiadomosc("Wymień przewód.");
end

rule "stopCzySwieciBezpiecznik&Zarowka&Przewod&CzujnikOk"
    when
        stop: Stopu()
        bezpiecznik : Bezpiecznik()
        zarowka : Zarowki()
        przewod : Przewody()
        eval(stop.getCzySwiecaStop()==1 && stop.getCzyDzialaCzujnikHamowania() == 2)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
        eval(przewod.isCzyUszkodzone() == 1)
    then
        stop.setWiadomosc("Sprawdź czy dochodzi napięcie - jeżeli tak, uszkodzony czujnik hamowania.");
end

rule "stopCzySwieciBezpiecznik&Zarowka&Przewod&CzujnikZly"
    when
        stop: Stopu()
        bezpiecznik : Bezpiecznik()
        zarowka : Zarowki()
        przewod : Przewody()
        eval(stop.getCzySwiecaStop()==1 && stop.getCzyDzialaCzujnikHamowania() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
        eval(przewod.isCzyUszkodzone() == 1)

    then
        stop.setWiadomosc("Wymień czujnik hamowania.");
end
//stopu Stop - 24

//cofania start
rule "cofaniaCzySwieciNie"
    when
        cofania : Cofania()
        eval(cofania.getCzySwieca() == 1)
     then
        cofania.setWiadomosc("Sprawdź bezpieczniki.");
end

rule "cofaniaCzySwieciTak"
    when
        cofania : Cofania()
        eval(cofania.getCzySwieca() == 2)
     then
        cofania.setWiadomosc("Dzialają poprawnie / Uszkodzony czujnik, jeżeli świecą ciągle.");
end

rule "cofaniaCzySwieciNieBezpiecznikOk"
    when
        cofania : Cofania()
        bezpiecznik : Bezpiecznik()
        eval(cofania.getCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
     then
        cofania.setWiadomosc("Sprawdź żarówki.");
end

rule "cofaniaCzySwieciNieBezpiecznikZly"
    when
        cofania : Cofania()
        bezpiecznik : Bezpiecznik()
        eval(cofania.getCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 2)
     then
        cofania.setWiadomosc("Wymień bezpiecznik - Uszkodzony.");
end

rule "cofaniaCzySwieciNieBezpiecznik&ZarowkaOk"
    when
        cofania : Cofania()
        bezpiecznik : Bezpiecznik()
        zarowka: Zarowki()
        eval(cofania.getCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
     then
        cofania.setWiadomosc("Sprawdź przewody.");
end

rule "cofaniaCzySwieciNieBezpiecznik&ZarowkaZla"
    when
        cofania : Cofania()
        bezpiecznik : Bezpiecznik()
        zarowka: Zarowki()
        eval(cofania.getCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 2)
     then
        cofania.setWiadomosc("Wymień żarówkę - Uszkodzona.");
end

rule "cofaniaCzySwieciNieBezpiecznik&Zarowka&PrzewodOk"
    when
        cofania : Cofania()
        bezpiecznik : Bezpiecznik()
        zarowka: Zarowki()
        przewod: Przewody()
        eval(cofania.getCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
        eval(przewod.isCzyUszkodzone() == 1)
     then
        cofania.setWiadomosc("Wymień czujnik biegu wstecznego - Uszkodzony.");
end

rule "cofaniaCzySwieciNieBezpiecznik&Zarowka&PrzewodZly"
    when
        cofania : Cofania()
        bezpiecznik : Bezpiecznik()
        zarowka: Zarowki()
        przewod: Przewody()
        eval(cofania.getCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
        eval(przewod.isCzyUszkodzone() == 2)
     then
        cofania.setWiadomosc("Wymień przewód - Uszkodzony.");
end

rule "cofaniaCzySwieciNieBezpiecznik&Zarowka&Przewod&CzujnikOk"
    when
        cofania : Cofania()
        bezpiecznik : Bezpiecznik()
        zarowka: Zarowki()
        przewod: Przewody()
        eval(cofania.getCzySwieca() == 1 && cofania.getCzyCzujnikBieguDziala() == 2)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
        eval(przewod.isCzyUszkodzone() == 1)
     then
        cofania.setWiadomosc("Coś poszło nie tak - skonsultuj się z mechanikiem.");
end

//swiatla cofania Stop
//33

//swiatla oswietlajace start

//hamulce

rule "klockiHamulcoweCzyZuzyte"
    when
        klockiHamulcowe: KlockiHamulcowe()
        eval(klockiHamulcowe.getCzyZuzyte() == 2)
    then
        klockiHamulcowe.setWiadomosc("Wymien klocki hamulcowe.");
end

rule "klockiHamulcoweCzyZuzyteOk"
    when
        klockiHamulcowe: KlockiHamulcowe()
        eval(klockiHamulcowe.getCzyZuzyte() == 1)
    then
        klockiHamulcowe.setWiadomosc("Wszystko w porządku.");
end

rule "klockiHamulcoweCzySiePrzegrzewaja"
    when
        klockiHamulcowe: KlockiHamulcowe()
        eval(klockiHamulcowe.getCzySiePrzegrzewaja() == 2)
    then
        klockiHamulcowe.setWiadomosc("Wymien klocki hamulcowe.");
end
/*
rule "tarczeHamulcoweCzySiePrzegrzewajaOk"
    when
        tarczeHamulcowe: TarczeHamulcowe()
        eval(tarczeHamulcowe.getCzySiePrzegrzewaja() == 1)
    then
        tarczeHamulcowe.setWiadomosc("Wszystko w porządku.");
   end

rule "tarczeHamulcoweCzySaUszkodzone"
    when
        tarczeHamulcowe: TarczeHamulcowe()
        eval(tarczeHamulcowe.getCzySaUszkodzone() == 2)
    then
        tarczeHamulcowe.setWiadomosc("Tarcze hamulcowe sa uszkodzone, wymien je.");
end

rule "tarczeHamulcoweCzySaUszkodzoneOk"
    when
        tarczeHamulcowe: TarczeHamulcowe()
        eval(tarczeHamulcowe.getCzySaUszkodzone() == 1)
    then
        tarczeHamulcowe.setWiadomosc("Wszystko w porządku.");
end
*/
rule "pompaHamulcowaCzyJestPlynHamulcowy"
    when
        pompaHamulcowa: PompaHamulcowa()
        eval(pompaHamulcowa.getCzyJestPlynHamulcowy() == 2)
    then
        pompaHamulcowa.setWiadomosc("Uzupelnij plyn hamulcowy.");
end

rule "pompaHamulcowaCzyJestPlynHamulcowyOk"
    when
        pompaHamulcowa: PompaHamulcowa()
        eval(pompaHamulcowa.getCzyJestPlynHamulcowy() == 1)
    then
        pompaHamulcowa.setWiadomosc("Wszystko w porządku.");
end

rule "pompaHamulcowaCzyJestOdpowiedniaIloscWodyWPlynieHamulcowym"
    when
        pompaHamulcowa: PompaHamulcowa()
        eval(pompaHamulcowa.getIloscWodyWplynieHamulcowym() == 2)
    then
        pompaHamulcowa.setWiadomosc("Za duza ilosc wody w plynie hamulcowym. Wymien plyn.");
end

rule "pompaHamulcowaCzyJestOdpowiedniaIloscWodyWPlynieHamulcowymOk"
    when
        pompaHamulcowa: PompaHamulcowa()
        eval(pompaHamulcowa.getIloscWodyWplynieHamulcowym() == 1)
    then
        pompaHamulcowa.setWiadomosc("Wszystko w porządku.");
end

rule "pompaHamulcowaCzyCisinienieJestOdpowiednie"
    when
        pompaHamulcowa: PompaHamulcowa()
        eval(pompaHamulcowa.getCzyJestOdpowiednieCisnienie() == 2)
    then
        pompaHamulcowa.setWiadomosc("Wyreguluj cisnienie w pompie hamulcowej.");
end

rule "pompaHamulcowaCzyCisinienieJestOdpowiednieOk"
    when
        pompaHamulcowa: PompaHamulcowa()
        eval(pompaHamulcowa.getCzyJestOdpowiednieCisnienie() == 1)
    then
        pompaHamulcowa.setWiadomosc("Wszystko w porządku.");
end

//ponizej do poprawy ??

rule "tarczeHamulcoweUszkodzonePrzezKlocki"
    when
        tarczeHamulcowe: TarczeHamulcowe()
        eval(tarczeHamulcowe.getCzySaUszkodzone() == 2)
    then
            tarczeHamulcowe.setWiadomosc("Zbyt duzy nacisk klockow powoduje uszkadzanie tarcz hamulcowych. Udaj sie do mechanika.");
end

rule "tarczeHamulcoweUszkodzonePrzezKlockiOk"
    when
        tarczeHamulcowe: TarczeHamulcowe()
        eval(tarczeHamulcowe.getCzySaUszkodzone() == 1)
    then
        tarczeHamulcowe.setWiadomosc("Wszystko w porządku.");
end

rule "tarczeHamulcowePrzegrzewaja"
    when
        tarczeHamulcowe: TarczeHamulcowe()
        eval(tarczeHamulcowe.getCzySiePrzegrzewaja() == 2)
    then
        tarczeHamulcowe.setWiadomosc("Wymien tarcze hamulcowe.");
end

rule "tarczeHamulcowePrzegrzewajaOk"
    when
        tarczeHamulcowe: TarczeHamulcowe()
        eval(tarczeHamulcowe.getCzySiePrzegrzewaja() == 1)
    then
        tarczeHamulcowe.setWiadomosc("Wszystko w porządku.");
end

rule "tloczkiHamulcoweCzyZabrudzone"
    when
        tloczkiHamulcowe: TloczkiHamulcowe()
        eval(tloczkiHamulcowe.getCzyZabrudzone() == 2)
    then
        tloczkiHamulcowe.setWiadomosc("Wyczysc tloczki hamulcowe.");
end

rule "tloczkiHamulcoweCzyZabrudzoneOk"
    when
        tloczkiHamulcowe: TloczkiHamulcowe()
        eval(tloczkiHamulcowe.getCzyZabrudzone() == 1)
    then
        tloczkiHamulcowe.setWiadomosc("Wszystko w porządku.");
end

rule "tloczkiHamulcoweCzySkorodowane"
    when
        tloczkiHamulcowe: TloczkiHamulcowe()
        eval(tloczkiHamulcowe.getCzySkorodowane() == 2)
    then
        tloczkiHamulcowe.setWiadomosc("Wymien tloczki hamulcowe.");
end

rule "tloczkiHamulcoweCzySkorodowaneOk"
    when
        tloczkiHamulcowe: TloczkiHamulcowe()
        eval(tloczkiHamulcowe.getCzySkorodowane() == 1)
    then
        tloczkiHamulcowe.setWiadomosc("Wszystko w porządku.");
end

rule "tloczkiHamulcoweCzyKolaSieBlokuja"
    when
        tloczkiHamulcowe: TloczkiHamulcowe()
        eval(tloczkiHamulcowe.getCzyKolaSieBlokuja() == 2)
    then
        tloczkiHamulcowe.setWiadomosc("Prowadnice zacisku hamulcowego blokuja kola.");
end

rule "tloczkiHamulcoweCzyKolaSieBlokujaOk"
    when
        tloczkiHamulcowe: TloczkiHamulcowe()
        eval(tloczkiHamulcowe.getCzyKolaSieBlokuja() == 1)
    then
        tloczkiHamulcowe.setWiadomosc("Wszystko w porządku.");
end

rule "tloczkiHamulcoweCzyKolaSieBlokujaCzyZabrudzone"
    when
        tloczkiHamulcowe: TloczkiHamulcowe()
        eval(tloczkiHamulcowe.getCzyKolaSieBlokuja() == 2)
        eval(tloczkiHamulcowe.getCzyZabrudzone() == 2)
    then
        tloczkiHamulcowe.setWiadomosc("Zabrudzone tloczki powoduja blokowanie sie kol.");
end

rule "tloczkiHamulcoweCzyKolaSieBlokujaCzyZabrudzone1/2OK"
    when
        tloczkiHamulcowe: TloczkiHamulcowe()
        eval(tloczkiHamulcowe.getCzyKolaSieBlokuja() == 1)
        eval(tloczkiHamulcowe.getCzyZabrudzone() == 2)
    then
        tloczkiHamulcowe.setWiadomosc("Wyczyść tłoczki hamulcowe.");
end

rule "tloczkiHamulcoweCzyKolaSieBlokujaCzyZabrudzone1/4OK"
    when
        tloczkiHamulcowe: TloczkiHamulcowe()
        eval(tloczkiHamulcowe.getCzyKolaSieBlokuja() == 2)
        eval(tloczkiHamulcowe.getCzyZabrudzone() == 1)
    then
        tloczkiHamulcowe.setWiadomosc("Uszkodzona gumka osłonowa prowadników.");
end

rule "tloczkiHamulcoweCzyKolaSieBlokujaCzyZabrudzoneOk"
    when
        tloczkiHamulcowe: TloczkiHamulcowe()
        eval(tloczkiHamulcowe.getCzyKolaSieBlokuja() == 1)
        eval(tloczkiHamulcowe.getCzyZabrudzone() == 1)
    then
        tloczkiHamulcowe.setWiadomosc("Wszystko w porządku.");
end

//opony

rule "oponyCzyBieznikZuzyty"
    when
        opony: Opony()
        eval(opony.getCzyBieznikZuzyty() == 2)
    then
        opony.setWiadomosc("Wymien opony.");
end

rule "oponyCzyBieznikZuzytyOk"
    when
        opony: Opony()
        eval(opony.getCzyBieznikZuzyty() == 1)
    then
        opony.setWiadomosc("Wszystko w porządku.");
end

rule "oponyCzyCisnieniePrawidlowe"
    when
        opony: Opony()
        eval(opony.getCzyCisnieniePrawidlowe() == 2)
    then
        opony.setWiadomosc("Wyreguluj cisnienie w oponach.");
end

rule "oponyCzyCisnieniePrawidloweOk"
    when
        opony: Opony()
        eval(opony.getCzyCisnieniePrawidlowe() == 1)
    then
        opony.setWiadomosc("Wszystko w porządku.");
end

rule "oponyCzyPrzebite"
    when
        opony: Opony()
        eval(opony.getCzyPrzebite() == 2)
    then
        opony.setWiadomosc("Wymien opone/opony.");
end

rule "oponyCzyPrzebiteOk"
    when
        opony: Opony()
        eval(opony.getCzyPrzebite() == 1)
    then
        opony.setWiadomosc("Wszystko w porządku.");
end

rule "oponyCzySamochodTraciSterownosc"
    when
        opony: Opony()
        eval(opony.getCzySamochodTraciSterownosc() == 2)
    then
        opony.setWiadomosc("Niepoprawny montaz opon.");
end

rule "oponyCzySamochodTraciSterownoscOk"
    when
        opony: Opony()
        eval(opony.getCzySamochodTraciSterownosc() == 1)
    then
        opony.setWiadomosc("Wszystko w porządku.");
end

rule "oponyCzyDrganiePodczasJazdy"
    when
        opony: Opony()
        eval(opony.getCzyDrganiaPodczasJazdy() == 2)
    then
        opony.setWiadomosc("Niewyważone koła.");
end

rule "oponyCzyDrganiePodczasJazdyOk"
    when
        opony: Opony()
        eval(opony.getCzyDrganiaPodczasJazdy() == 1)
    then
        opony.setWiadomosc("Wszystko w porządku.");
end

//amortyzatory

rule "amortyzatoryWydluzonaDrogaHamowania"
    when
        amortyzatory: Amortyzatory()
        eval(amortyzatory.getWydluzonaDrogaHamowania() == 2)
    then
        amortyzatory.setWiadomosc("Uszkodzone amortyzatory.");
end

rule "amortyzatoryWydluzonaDrogaHamowaniaOk"
    when
        amortyzatory: Amortyzatory()
        eval(amortyzatory.getWydluzonaDrogaHamowania() == 1)
    then
        amortyzatory.setWiadomosc("Wszystko w porządku.");
end

rule "amortyzatoryWyciekOlejuZAmortyzatora"
    when
        amortyzatory: Amortyzatory()
        eval(amortyzatory.getWyciekOlejuZAmortyzatora() == 2)
    then
        amortyzatory.setWiadomosc("Uszkodony amortyzator.");
end

rule "amortyzatoryWyciekOlejuZAmortyzatoraOk"
    when
        amortyzatory: Amortyzatory()
        eval(amortyzatory.getWyciekOlejuZAmortyzatora() == 1)
    then
        amortyzatory.setWiadomosc("Wszystko w porządku.");
end

rule "amortyzatoryOdrywajaceSieKolaOdNawierzchni"
    when
        amortyzatory: Amortyzatory()
        eval(amortyzatory.getOdrywajaceSieKolaOdNawierzchni() == 2)
    then
        amortyzatory.setWiadomosc("Uszkodzone amortyzatory.");
end

rule "amortyzatoryOdrywajaceSieKolaOdNawierzchniOk"
    when
        amortyzatory: Amortyzatory()
        eval(amortyzatory.getOdrywajaceSieKolaOdNawierzchni() == 1)
    then
        amortyzatory.setWiadomosc("Wszystko w porządku.");
end

//geometria zawieszenia

rule "geometeriaSamoistneSkrecaniePojazdu"
    when
        geometriaZawieszenia: GeometriaZawieszenia()
        eval(geometriaZawieszenia.getSamoistneSkrecaniePojazdu() == 2)
    then
        geometriaZawieszenia.setWiadomosc("Niepoprawna geometria zawieszenia. Udaj sie do mechanika.");
end

rule "geometeriaSamoistneSkrecaniePojazduOk"
    when
        geometriaZawieszenia: GeometriaZawieszenia()
        eval(geometriaZawieszenia.getSamoistneSkrecaniePojazdu() == 1)
    then
        geometriaZawieszenia.setWiadomosc("Wszystko w porządku.");
end

rule "geometriaOdpowiedniaZbieznoscKol"
    when
        geometriaZawieszenia: GeometriaZawieszenia()
        eval(geometriaZawieszenia.getOdpowiedniaZbieznoscKol() == 2)
    then
        geometriaZawieszenia.setWiadomosc("Niepoprawna geometria zawieszenia. Udaj sie do mechanika.");
end

rule "geometriaOdpowiedniaZbieznoscKolOk"
    when
        geometriaZawieszenia: GeometriaZawieszenia()
        eval(geometriaZawieszenia.getOdpowiedniaZbieznoscKol() == 1)
    then
        geometriaZawieszenia.setWiadomosc("Wszystko w porządku.");
end

rule "geometriaKatPochyleniaKol"
    when
        geometriaZawieszenia: GeometriaZawieszenia()
        eval(geometriaZawieszenia.getKatPochyleniaKol() == 2)
    then
        geometriaZawieszenia.setWiadomosc("Niepoprawna geometria zawieszenia. Udaj sie do mechanika.");
end

rule "geometriaKatPochyleniaKolOk"
    when
        geometriaZawieszenia: GeometriaZawieszenia()
        eval(geometriaZawieszenia.getKatPochyleniaKol() == 1)
    then
        geometriaZawieszenia.setWiadomosc("Wszystko w porządku.");
end

//56

rule "geometeriaCzyPiskOponPodczasSkrecania"
    when
        geometriaZawieszenia: GeometriaZawieszenia()
        eval(geometriaZawieszenia.getCzyPiskOponPodczasSkrecania() == 2)
    then
        geometriaZawieszenia.setWiadomosc("Źle ustawiona geometria zawieszenia.");
end

rule "geometeriaCzyPiskOponPodczasSkrecaniaOk"
    when
        geometriaZawieszenia: GeometriaZawieszenia()
        eval(geometriaZawieszenia.getCzyPiskOponPodczasSkrecania() == 1)
    then
        geometriaZawieszenia.setWiadomosc("Wszystko w porządku.");
end

rule "stabilizatoryCzyStukanieZawieszeniaPodczasJazdyPoNierownosciach"
    when
        stabilizatory: Stabilizatory()
        eval(stabilizatory.getCzyStukanieZawieszeniaPodczasJazdyPoNierownosciach() == 2)
    then
        stabilizatory.setWiadomosc("Uszkodzony lub poluzowany łącznik stabilizatora.");
end

rule "stabilizatoryCzyStukanieZawieszeniaPodczasJazdyPoNierownosciachOk"
    when
        stabilizatory: Stabilizatory()
        eval(stabilizatory.getCzyStukanieZawieszeniaPodczasJazdyPoNierownosciach() == 1)
    then
        stabilizatory.setWiadomosc("Wszystko w porządku.");
end

rule "stabilizatoryCzyGumaStabilizatoraZuzyta"
    when
        stabilizatory: Stabilizatory()
        eval(stabilizatory.getCzyGumaStabilizatoraZuzyta() == 2)
    then
        stabilizatory.setWiadomosc("Wymien gume stabilizatora.");
end

rule "stabilizatoryCzyGumaStabilizatoraZuzytaOk"
    when
        stabilizatory: Stabilizatory()
        eval(stabilizatory.getCzyGumaStabilizatoraZuzyta() == 1)
    then
        stabilizatory.setWiadomosc("Wszystko w porządku.");
end

rule "wahaczeCzyTulejeZuzyte"
    when
        wahacze: Wahacze()
        eval(wahacze.getCzyStukaniePodczasjazdyPoNierownosciach() == 2 && wahacze.getCzySzarpaniePrzyRuszaniu() == 2)
    then
        wahacze.setWiadomosc("Zużyte tuleje wahacza.");
end

rule "wahaczeCzyTulejeZuzyteOk"
    when
        wahacze: Wahacze()
        eval(wahacze.getCzyStukaniePodczasjazdyPoNierownosciach() == 1 && wahacze.getCzySzarpaniePrzyRuszaniu() == 1)
    then
        wahacze.setWiadomosc("Wszystko w porządku.");
end

rule "wahaczeCzyTulejeZuzyte1/2Ok"
    when
        wahacze: Wahacze()
        eval(wahacze.getCzyStukaniePodczasjazdyPoNierownosciach() == 2 && wahacze.getCzySzarpaniePrzyRuszaniu() == 1)
    then
        wahacze.setWiadomosc("Uszkodzone wahacze.");
end

rule "wahaczeCzyTulejeZuzyte1/4Ok"
    when
        wahacze: Wahacze()
        eval(wahacze.getCzyStukaniePodczasjazdyPoNierownosciach() == 1 && wahacze.getCzySzarpaniePrzyRuszaniu() == 2)
    then
        wahacze.setWiadomosc("Usterka sprzęgła.");
end

rule "wahaczeCzyPukanieWKolach"
    when
        wahacze: Wahacze()
        eval(wahacze.getCzyPukanieWKolach() == 2)
    then
        wahacze.setWiadomosc("Zużyty sworzeń wahacza.");
end

rule "wahaczeCzyPukanieWKolachOk"
    when
        wahacze: Wahacze()
        eval(wahacze.getCzyPukanieWKolach() == 1)
    then
        wahacze.setWiadomosc("Wszystko w porządku.");
end

rule "ukladKierowniczyCzySzarpanieWKolachPodczasJazdy"
    when
        ukladKierowniczy: UkladKierowniczy()
        eval(ukladKierowniczy.getCzySzarpaniePodczasSkrecania() == 2)
    then
        ukladKierowniczy.setWiadomosc("Zapowietrzenie układu kierowniczego. Sprawdź także pompę wspomagania.");
end

rule "ukladKierowniczyCzySzarpanieWKolachPodczasJazdyOk"
    when
        ukladKierowniczy: UkladKierowniczy()
        eval(ukladKierowniczy.getCzySzarpaniePodczasSkrecania() == 1)
    then
        ukladKierowniczy.setWiadomosc("Wszystko w porządku.");
end

rule "ukladKierowniczyCzyLuzWKolachPodczasJazdy"
    when
        ukladKierowniczy: UkladKierowniczy()
        eval(ukladKierowniczy.getCzyLuzWKolachPodczasJazdy() == 2)
    then
        ukladKierowniczy.setWiadomosc("Wyrobione końcówki drążków kierowniczych.");
end

rule "ukladKierowniczyCzyLuzWKolachPodczasJazdyOk"
    when
        ukladKierowniczy: UkladKierowniczy()
        eval(ukladKierowniczy.getCzyLuzWKolachPodczasJazdy() == 1)
    then
        ukladKierowniczy.setWiadomosc("Wszystko w porządku.");
end

rule "ukladKierowniczyCzyDrganieKierownicyPodczasPostoju"
    when
        ukladKierowniczy: UkladKierowniczy()
        eval(ukladKierowniczy.getCzyDrganieKierownicyPodczasPostoju() == 2)
    then
        ukladKierowniczy.setWiadomosc("Zapowietrzony układ wspomagania.");
end

rule "ukladKierowniczyCzyDrganieKierownicyPodczasPostojuOk"
    when
        ukladKierowniczy: UkladKierowniczy()
        eval(ukladKierowniczy.getCzyDrganieKierownicyPodczasPostoju() == 1)
    then
        ukladKierowniczy.setWiadomosc("Wszystko w porządku.");
end

rule "ukladKierowniczyCzyWspomaganieDziala"
    when
        ukladKierowniczy: UkladKierowniczy()
        eval(ukladKierowniczy.getCzyWspomaganieDziala() == 2)
    then
        ukladKierowniczy.setWiadomosc("Przepalony bezpiecznik w urządzeniu sterującym.");
end

rule "ukladKierowniczyCzyWspomaganieDzialaOk"
    when
        ukladKierowniczy: UkladKierowniczy()
        eval(ukladKierowniczy.getCzyWspomaganieDziala() == 1)
    then
        ukladKierowniczy.setWiadomosc("Wszystko w porządku.");
end

rule "ukladKierowniczyWspomaganieRazDzialaRazNie"
    when
        ukladKierowniczy: UkladKierowniczy()
        eval(ukladKierowniczy.getWspomaganieRazDzialaRazNie() == 2)
    then
        ukladKierowniczy.setWiadomosc("Uszkodzona instalacja elektryczna.");
end

rule "ukladKierowniczyWspomaganieRazDzialaRazNieOk"
    when
        ukladKierowniczy: UkladKierowniczy()
        eval(ukladKierowniczy.getWspomaganieRazDzialaRazNie() == 1)
    then
        ukladKierowniczy.setWiadomosc("Wszystko w porządku.");
end

rule "ukladKierowniczyWyciePompyWTrakcieJazdy"
    when
        ukladKierowniczy: UkladKierowniczy()
        eval(ukladKierowniczy.getWyciePompyWTrakcieJazdy() == 2)
    then
        ukladKierowniczy.setWiadomosc("Zbyt mała ilość płynu w pompie, może dojść do zatarcia.");
end

rule "ukladKierowniczyWyciePompyWTrakcieJazdyOk"
    when
        ukladKierowniczy: UkladKierowniczy()
        eval(ukladKierowniczy.getWyciePompyWTrakcieJazdy() == 1)
    then
        ukladKierowniczy.setWiadomosc("Wszystko w porządku.");
end

//67

rule "ukladKierowniczyCzyUtrudnioneSkrecanie"
    when
        ukladKierowniczy: UkladKierowniczy()
        eval(ukladKierowniczy.getCzyUtrudnioneSkrecanie() == 2)
    then
        ukladKierowniczy.setWiadomosc("Pompa generuje zbyt niskie ciśnienie płynu.");
end

rule "ukladKierowniczyCzyUtrudnioneSkrecanieOk"
    when
        ukladKierowniczy: UkladKierowniczy()
        eval(ukladKierowniczy.getCzyUtrudnioneSkrecanie() == 1)
    then
        ukladKierowniczy.setWiadomosc("Wszystko w porządku.");
end

rule "ukladKierowniczyCzyGwizdyPompyWTrakcieJazdy"
    when
        ukladKierowniczy: UkladKierowniczy()
        eval(ukladKierowniczy.getCzyGwizdyPompyWTrakcieJazdy() == 2)
    then
        ukladKierowniczy.setWiadomosc("Pompa zasysa powietrze, zbyt mała ilość płynu.");
end

rule "ukladKierowniczyCzyGwizdyPompyWTrakcieJazdyOk"
    when
        ukladKierowniczy: UkladKierowniczy()
        eval(ukladKierowniczy.getCzyGwizdyPompyWTrakcieJazdy() == 1)
    then
        ukladKierowniczy.setWiadomosc("Wszystko w porządku.");
end

//wydech

rule "wydechCzyDuzoBialegoDymu"
    when
        wydech: Wydech()
        eval(wydech.getCzyDuzoBialegoDymu() == 2)
    then
        wydech.setWiadomosc("Skontroluj poziom płynu w zbiorniku wyrównawczym. Jeśli jego stan jest niski - przeciek w komorze spalania.");
end

rule "wydechCzyDuzoBialegoDymuOk"
    when
        wydech: Wydech()
        eval(wydech.getCzyDuzoBialegoDymu() == 1)
    then
        wydech.setWiadomosc("Wszystko w porządku.");
end

rule "wydechCzyKolorDymuNiebieski"
    when
        wydech: Wydech()
        eval(wydech.getCzyKolorDymuNiebieski() == 2)
    then
        wydech.setWiadomosc("Mocne zużycie lub uszkodzenie silnika.");
end

rule "wydechCzyKolorDymuNiebieskiOk"
    when
        wydech: Wydech()
        eval(wydech.getCzyKolorDymuNiebieski() == 1)
    then
        wydech.setWiadomosc("Wszystko w porządku.");
end

rule "wydechCzyKolorDymuCzarny"
    when
        wydech: Wydech()
        eval(wydech.getCzyKolorDymuCzarny() == 2)
    then
        wydech.setWiadomosc("Awaria elementów układu wtryskowego - wymagana wizyta w specjalistycznym warsztacie.");
end

rule "wydechCzyKolorDymuCzarnyOk"
    when
        wydech: Wydech()
        eval(wydech.getCzyKolorDymuCzarny() == 1)
    then
        wydech.setWiadomosc("Wszystko w porządku.");
end

rule "wydechCzyGrzechotaniePodczasPracy"
    when
        katalizator: Katalizator()
        eval(katalizator.getCzyGrzechotaniePodczasPracy() == 2)
    then
        katalizator.setWiadomosc("Uszkodzony/pęknięty katalizator, zalecana wymiana.");
end

rule "wydechCzyGrzechotaniePodczasPracyOk"
    when
        katalizator: Katalizator()
        eval(katalizator.getCzyGrzechotaniePodczasPracy() == 1)
    then
        katalizator.setWiadomosc("Wszystko w porządku.");
   end

rule "wydechCzyProblemyZUruchomieniemSilnika"
    when
        katalizator: Katalizator()
        eval(katalizator.getCzyProblemyZUruchomieniemSilnika() == 2)
    then
        katalizator.setWiadomosc("Zapchany katalizator.");
end

rule "wydechCzyProblemyZUruchomieniemSilnikaOk"
    when
        katalizator: Katalizator()
        eval(katalizator.getCzyProblemyZUruchomieniemSilnika() == 1)
    then
        katalizator.setWiadomosc("Wszystko w porządku.");
end

rule "wydechCzyPrzyduszanieSilnika"
    when
        katalizator: Katalizator()
        eval(katalizator.getCzyPrzyduszanieSilnika() == 2)
    then
        katalizator.setWiadomosc("Zapchany katalizator.");
end

rule "wydechCzyPrzyduszanieSilnikaOk"
    when
        katalizator: Katalizator()
        eval(katalizator.getCzyPrzyduszanieSilnika() == 1)
    then
        katalizator.setWiadomosc("Wszystko w porządku.");
end

rule "wydechCzyHalasPodczasPracy"
    when
        kolektor: Kolektor()
        eval(kolektor.getCzyHalasPodczasPracy() == 2)
    then
        kolektor.setWiadomosc("Pęknięty kolektor. Zalecana wymiana.");
end

rule "wydechCzyHalasPodczasPracyOk"
    when
        kolektor: Kolektor()
        eval(kolektor.getCzyHalasPodczasPracy() == 1)
    then
        kolektor.setWiadomosc("Wszystko w porządku.");
end

rule "wydechCzySondaUszkodzona"
    when
        sondaLambda: SondaLambda()
        eval(sondaLambda.getCzySpadekMocySilnika() == 2 && sondaLambda.getCzyWzrostZuzyciaPaliwa() == 2)
    then
        sondaLambda.setWiadomosc("Awaria sondy lambda.");
end

rule "wydechCzySondaUszkodzonaOk"
    when
        sondaLambda: SondaLambda()
        eval(sondaLambda.getCzySpadekMocySilnika() == 1 && sondaLambda.getCzyWzrostZuzyciaPaliwa() == 1)
    then
        sondaLambda.setWiadomosc("Wszystko w porządku.");
end

rule "wydechCzySondaUszkodzona1/2Ok"
    when
        sondaLambda: SondaLambda()
        eval(sondaLambda.getCzySpadekMocySilnika() == 2 && sondaLambda.getCzyWzrostZuzyciaPaliwa() == 1)
    then
        sondaLambda.setWiadomosc("Niedrożny przewód paliwowy.");
end

rule "wydechCzySondaUszkodzona1/4Ok"
    when
        sondaLambda: SondaLambda()
        eval(sondaLambda.getCzySpadekMocySilnika() == 1 && sondaLambda.getCzyWzrostZuzyciaPaliwa() == 2)
    then
        sondaLambda.setWiadomosc("Awaria pompy paliwa.");
end

//77
//skrzynia biegów

rule "automatycznaCzyRozlaczanieNapedAwaria"
    when
        automatyczna: Automatyczna()
        eval(automatyczna.getCzyRozlaczanieNapedu() == 2)
    then
        automatyczna.setWiadomosc("Awaria elektroniki sterującej.");
end

rule "automatycznaCzyRozlaczanieNapeduOk"
    when
        automatyczna: Automatyczna()
        eval(automatyczna.getCzyRozlaczanieNapedu() == 1)
    then
        automatyczna.setWiadomosc("Wszystko w porządku.");
end

rule "automatycznaCzyBrakBieguWstecznegoJechowy"
    when
        automatyczna: Automatyczna()
        eval(automatyczna.getCzyBrakBieguWstecznego() == 2)
    then
        automatyczna.setWiadomosc("Awaria kosza skrzyni.");
end

rule "automatycznaCzyBrakBieguWstecznegoOk"
    when
        automatyczna: Automatyczna()
        eval(automatyczna.getCzyBrakBieguWstecznego() == 1)
    then
        automatyczna.setWiadomosc("Wszystko w porządku.");
end

rule "automatycznaCzyBrakWysokichBiegow"
    when
        automatyczna: Automatyczna()
        eval(automatyczna.getCzyBrakWysokichBiegow() == 2)
    then
        automatyczna.setWiadomosc("Awaria bloku hydrauliki skrzyni.");
end

rule "automatycznaCzyBrakWysokichBiegowOk"
    when
        automatyczna: Automatyczna()
        eval(automatyczna.getCzyBrakWysokichBiegow() == 1)
    then
        automatyczna.setWiadomosc("Wszystko w porządku.");
end
//77
//skrzynia biegów

rule "automatycznaCzyRozlaczanieNapedukSiemandero"
    when
        automatyczna: Automatyczna()
        eval(automatyczna.getCzyRozlaczanieNapedu() == 1)
    then
        automatyczna.setWiadomosc("Awaria elektroniki sterującej.");
end

rule "automatycznaCzyBrakBieguWstecznegoSiema"
    when
        automatyczna: Automatyczna()
        eval(automatyczna.getCzyBrakBieguWstecznego() == 1)
    then
        automatyczna.setWiadomosc("Awaria kosza skrzyni.");
end

rule "automatycznaCzyBrakWysokichBiegowAwerunia"
    when
        automatyczna: Automatyczna()
        eval(automatyczna.getCzyBrakWysokichBiegow() == 1)
    then
        automatyczna.setWiadomosc("Awaria bloku hydrauliki skrzyni.");
end

rule "czujnikiCzyBrakMocyPodczasPrzyspieszania"
    when
        czujnikMasyPowietrza : CzujnikMasyPowietrza()
        eval(czujnikMasyPowietrza.getCzyBrakMocyPodczasPrzyspieszania() == 2)
    then
        czujnikMasyPowietrza.setWiadomosc("Czujnik masy powietrza nie działa.");
end

rule "czujnikiCzyBrakMocyPodczasPrzyspieszaniaOK"
    when
        czujnikMasyPowietrza : CzujnikMasyPowietrza()
        eval(czujnikMasyPowietrza.getCzyBrakMocyPodczasPrzyspieszania() == 1)
    then
        czujnikMasyPowietrza.setWiadomosc("Wszystko w porządku.");
end

rule "czujnikiCzyNierownaPracaSilnikaNaJalowymBiegu"
    when
        czujnikMasyPowietrza : CzujnikMasyPowietrza();
        eval(czujnikMasyPowietrza.getCzyNierownaPracaSilnikaNaJalowymBiegu() == 2)
    then
        czujnikMasyPowietrza.setWiadomosc("Czujnik masy powietrza nie działa.");
end

rule "czujnikiCzyNierownaPracaSilnikaNaJalowymBieguOK"
    when
        czujnikPolozeniaWaluKorbowego : CzujnikPolozeniaWaluKorbowego()
        eval(czujnikPolozeniaWaluKorbowego.getCzyNierownaPracaSilnika() == 1)
    then
        czujnikPolozeniaWaluKorbowego.setWiadomosc("Wszystko w porządku.");
end

rule "czujnikiCzyNierownaPracaSilnika"
    when
        czujnikPolozeniaWaluKorbowego : CzujnikPolozeniaWaluKorbowego();
        eval(czujnikPolozeniaWaluKorbowego.getCzyNierownaPracaSilnika() == 2)
    then
        czujnikPolozeniaWaluKorbowego.setWiadomosc("Silnik pracuje nierówno - czujnik położenia wału korbowego nie działa.");
end

rule "czujnikiCzyNierownaPracaSilnikaOK"
    when
        czujnikPolozeniaWaluKorbowego : CzujnikPolozeniaWaluKorbowego();
        eval(czujnikPolozeniaWaluKorbowego.getCzyNierownaPracaSilnika() == 1)
    then
        czujnikPolozeniaWaluKorbowego.setWiadomosc("Czujnik wału korbowego działa.");
end

rule "przepustnicaCzyNierownaPracaMotoru"
    when
        przepustnica : Przepustnica()
        eval(przepustnica.getCzyNierownaPracaMotoru() == 2)
    then
        przepustnica.setWiadomosc("Przepustnica uszkodzona.");
end
rule "przepustnicaCzyNierownaPracaMotoruOK"
    when
        przepustnica : Przepustnica()
        eval(przepustnica.getCzyNierownaPracaMotoru() == 1)
    then
        przepustnica.setWiadomosc("Wszystko w porządku.");
end


rule "przepustnicaCzySilnikWylaczaSiePodczasHamowania"
    when
        przepustnica : Przepustnica()
        eval(przepustnica.getCzySilnikWylaczaSiePodczasHamowania() == 2)
    then
        przepustnica.setWiadomosc("Silnik wyłącza sie podaczas hamowania - przepustnica uszkodzona");
end

rule "przepustnicaCzySilnikWylaczaSiePodczasHamowaniaOK"
    when
        przepustnica : Przepustnica()
        eval(przepustnica.getCzySilnikWylaczaSiePodczasHamowania() == 1)
    then
        przepustnica.setWiadomosc("Wszystko w porządku.");
end

rule "cewkaCzyNierownaPracaSilnikaNaJalowymBiegu"
    when
        cewka : Cewka()
        eval(cewka.getCzyNierownaPracaSilnikaNaJalowymBiegu() == 2)
    then
        cewka.setWiadomosc("Cewka nie działa.");
end

rule "cewkaCzyNierownaPracaSilnikaNaJalowymBieguOK"
    when
        cewka : Cewka()
        eval(cewka.getCzyNierownaPracaSilnikaNaJalowymBiegu() == 1)
    then
        cewka.setWiadomosc("Wszystko w porządku.");
end

rule "cewkaCzyProblemZUruchomieniem"
    when
        cewka : Cewka()
        eval(cewka.getCzyProblemZUruchomieniem() == 2)
    then
        cewka.setWiadomosc("Cewka nie działa.");
end

rule "cewkaCzyProblemZUruchomieniemOK"
    when
        cewka : Cewka()
        eval(cewka.getCzyProblemZUruchomieniem() == 1)
    then
        cewka.setWiadomosc("Wszystko w porządku.");
end

rule "cewkaCzySpadkiMocySilnika"
    when
        cewka : Cewka()
        eval(cewka.getCzySpadkiMocySilnika() == 2)
    then
        cewka.setWiadomosc("Cewka nie działa.");
end

rule "cewkaCzySpadkiMocySilnikaOK"
    when
        cewka : Cewka()
        eval(cewka.getCzySpadkiMocySilnika() == 1)
    then
        cewka.setWiadomosc("Wszystko w porzątku.");
end


rule "turbosprezarkaCzySpadkiMocySilnika"
    when
        turbosprezarka : Turbosprezarka()
        eval(turbosprezarka.getCzySpadkiMocySilnika() == 2)
        eval(turbosprezarka.getCzyZwiekszoneZadymienie()==2)
    then
        turbosprezarka.setWiadomosc("Turbosprężarka zepsuta.");
end

rule "turbosprezarkaCzySpadkiMocySilnikaOK"
    when
        turbosprezarka : Turbosprezarka()
        eval(turbosprezarka.getCzySpadkiMocySilnika() == 1)
        eval(turbosprezarka.getCzyZwiekszoneZadymienie()== 1)
    then
        turbosprezarka.setWiadomosc("Wszystko w porządku.");
end

rule "turbosprezarkaCzySpadkiMocySilnikaOG"
    when
        turbosprezarka : Turbosprezarka()
        eval(turbosprezarka.getCzySpadkiMocySilnika() == 1)
        eval(turbosprezarka.getCzyZwiekszoneZadymienie()==2)
    then
        turbosprezarka.setWiadomosc("Zwiekszone zadymienie - Turbosprężarka zepsuta.");
end

rule "turbosprezarkaCzySpadkiMocySilnikaOG2"
    when
        turbosprezarka : Turbosprezarka()
        eval(turbosprezarka.getCzySpadkiMocySilnika() == 2)
        eval(turbosprezarka.getCzyZwiekszoneZadymienie()== 1)
    then
        turbosprezarka.setWiadomosc("Spadki mocy silnika - Turbosprężarka zepsuta.");
end

rule "turbosprezarkaCzyWydajeGlosneOdglosy"
    when
        turbosprezarka : Turbosprezarka()
        eval(turbosprezarka.getCzyWydajeGlosneOdglosy() == 2)
    then
        turbosprezarka.setWiadomosc("Turbosprężarka zepsuta.");
end


rule "turbosprezarkaCzyWydajeGlosneOdglosyOK"
    when
        turbosprezarka : Turbosprezarka()
        eval(turbosprezarka.getCzyWydajeGlosneOdglosy() == 1)
    then
        turbosprezarka.setWiadomosc("Wszystko w porządku.");
end


//100
//skrzynia biegow

rule "manualnaCzyLuznyDrazek"
    when
        manualna : Manualna()
        eval(manualna.getCzyLuznyDrazek() == 2)
    then
        manualna.setWiadomosc("Drazek uszkodzony.");
end

rule "manualnaCzyLuznyDrazekOK"
    when
        manualna : Manualna()
        eval(manualna.getCzyLuznyDrazek() == 1)
    then
        manualna.setWiadomosc("Wszystko w porzątku.");
end

rule "manualnaCzyWyjePodczasJazdy"
    when
        manualna : Manualna()
        eval(manualna.getCzyWyjePodczasJazdy() == 2)
    then
        manualna.setWiadomosc("Drazek uszkodzony.");
end

rule "manualnaCzyWyjePodczasJazdyOK"
    when
        manualna : Manualna()
        eval(manualna.getCzyWyjePodczasJazdy() == 1)
    then
        manualna.setWiadomosc("Wszystko w porzątku.");
end

rule "manualnaCzyZgrzytaPodczasWchodzeniaBieg"
    when
        manualna : Manualna()
        eval(manualna.getCzyZgrzytaPodczasWchodzeniaBiegu() == 2)
    then
        manualna.setWiadomosc("Drazek uszkodzony.");
end

rule "manualnaCzyZgrzytaPodczasWchodzeniaBiegOK"
    when
        manualna : Manualna()
        eval(manualna.getCzyZgrzytaPodczasWchodzeniaBiegu() == 1)
    then
        manualna.setWiadomosc("Wszystko w porzątku.");
end

rule "drogoweCzySwieci"
    when
        oswietlajace : Oswietlajace()
        eval(oswietlajace.getCzySwieca() == 1 && oswietlajace.getCzyDajaSlabeSwiatlo() == 2)
    then
        oswietlajace.setWiadomosc("Wypoleruj światła.");
end

rule "drogoweCzySwieciOk"
when
        oswietlajace : Oswietlajace()
        eval(oswietlajace.getCzySwieca() == 2)
        eval(oswietlajace.getCzyDajaSlabeSwiatlo() == 1)
then
        oswietlajace.setWiadomosc("Wyglada na to, ze dzialaja poprawnie.");
end


rule "oswietlajaceCzySwieciBezpiecznikOk"
    when
        oswietlajace : Oswietlajace()
        bezpiecznik : Bezpiecznik()
        eval(oswietlajace.getCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
    then
        oswietlajace.setWiadomosc("Sprawdz zarówkę.");
end

rule "osCzySwieciBezpiecznikOk"
    when
        oswietlajace : Oswietlajace()
        bezpiecznik : Bezpiecznik()
        eval(oswietlajace.getCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 2)
    then
        oswietlajace.setWiadomosc("Wymień bezpiecznik.");
end

rule "osCzySwieciBezpiecznik&ZarowkaOk"
    when
        oswietlajace : Oswietlajace()
        bezpiecznik : Bezpiecznik()
        zarowka : Zarowki()
        eval(oswietlajace.getCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
    then
        oswietlajace.setWiadomosc("Sprawdz przewody.");
end


rule "osCzySwieciBezpiecznikOk&ZarowkaZla"
    when
        oswietlajace : Oswietlajace()
        bezpiecznik : Bezpiecznik()
        zarowka : Zarowki()
        eval(oswietlajace.getCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 2)
    then
        oswietlajace.setWiadomosc("Wymień żarówkę.");
end

rule "osCzySwieciBezpiecznik&Zarowka&PrzewodOk"
    when
        oswietlajace : Oswietlajace()
        bezpiecznik : Bezpiecznik()
        zarowka : Zarowki()
        przewod : Przewody()
        eval(oswietlajace.getCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
    then
        oswietlajace.setWiadomosc("Sprawdź czujnik hamowania.");
end

rule "osCzySwieciBezpiecznik&Zarowka&PrzewodZly"
    when
        oswietlajace : Oswietlajace()
        bezpiecznik : Bezpiecznik()
        zarowka : Zarowki()
        przewod : Przewody()
        eval(oswietlajace.getCzySwieca() == 1)
        eval(bezpiecznik.isCzySpalony() == 1)
        eval(zarowka.isCzySpalone() == 1)
        eval(przewod.isCzyUszkodzone() == 2)
    then
        oswietlajace.setWiadomosc("Wymień przewód.");
end


